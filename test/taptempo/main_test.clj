(ns taptempo.main-test
  (:require [clojure.test :refer :all]
            [taptempo.main :refer :all]))

(deftest calc-tempo-test
  (testing "calc-tempo from 0"
    (is (= (calc-tempo [1]) [nil 1]))
    (is (= (calc-tempo [60000 0]) [1N 2]))
    (is (= (calc-tempo [120000 60000 0]) [1N 3]))
    (is (= (calc-tempo [180000 120000 60000 0]) [1N 4]))
    (is (= (calc-tempo [240000 180000 120000 60000 0]) [1N 5]))
    (is (= (calc-tempo [300000 240000 180000 120000 60000 0]) [1N 6]))
    (is (= (calc-tempo [360000 300000 240000 180000 120000 60000 0]) [1N 7])))
  (testing "calc-tempo from 0 quicker"
    (is (= (calc-tempo [36000 30000 24000 18000 12000 6000 0]) [10N 7])))
  (testing "calcl-tempo from 1000"
    (is (= (calc-tempo [361000 301000 241000 181000 121000 61000 1000]) [1N 7])))
  (testing "calc-tempo from 1000 quiker"
    (is (= (calc-tempo [37000 31000 25000 19000 13000 7000 1000]) [10N 7])))
  (testing "calc-tempo for some validated entries"
    (is (= (calc-tempo [1521057817004]) [nil 1]))
    (is (= (calc-tempo [1521057820183 1521057817004]) [60000/3179 2]))
    (is (= (calc-tempo [1521057820602 1521057820183 1521057817004]) [60000/1799 3]))
    (is (= (calc-tempo [1521057821046 1521057820602 1521057820183 1521057817004]) [90000/2021 4]))
    (is (= (calc-tempo [1521057821469 1521057821046 1521057820602 1521057820183 1521057817004]) [48000/893 5]))
    (is (= (calc-tempo [1521057821914 1521057821469 1521057821046 1521057820602 1521057820183 1521057817004]) [30000/491 6]))
    (is (= (calc-tempo [1521057822350 1521057821914 1521057821469 1521057821046 1521057820602 1521057820183]) [300000/2167 6]))
    (is (= (calc-tempo [1521057822807 1521057822350 1521057821914 1521057821469 1521057821046 1521057820602]) [20000/147 6]))
    (is (= (calc-tempo [1521057823243 1521057822807 1521057822350 1521057821914 1521057821469 1521057821046]) [300000/2197 6]))
    (is (= (calc-tempo [1521057823700 1521057823243 1521057822807 1521057822350 1521057821914 1521057821469]) [300000/2231 6]))
    (is (= (calc-tempo [1521057824167 1521057823700 1521057823243 1521057822807 1521057822350 1521057821914]) [100000/751 6]))
    (is (= (calc-tempo [1521057824633 1521057824167 1521057823700 1521057823243 1521057822807 1521057822350]) [100000/761 6]))))


(deftest compute-next-test
  (testing "compute-next basic test"
    (is (= (compute-next 10 [0] {:reset-time 5, :sample-size 3}) [10 0]))
    (is (= (compute-next 20 [10 0] {:reset-time 5, :sample-size 3}) [20 10 0]))
    (is (= (compute-next 30 [20 10 0] {:reset-time 5, :sample-size 3}) [30 20 10]))
    (is (= (compute-next 40 [30 20 10 0] {:reset-time 5, :sample-size 3}) [40 30 20]))
    (is (= (compute-next 40 [30 20 10 0] {:reset-time 5, :sample-size 2}) [40 30]))
    (is (= (compute-next 80 [70 60 50 40 30 20 10 0] {:reset-time 5, :sample-size 7}) [80 70 60 50 40 30 20])))
  (testing "compute-next some case"
    (is (= (compute-next 1521058272212 [1521058271218] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058272212 1521058271218]))
    (is (= (compute-next 1521058272667 [1521058272235 1521058271218] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058272667 1521058272235 1521058271218]))
    (is (= (compute-next 1521058273136 [1521058272668 1521058272235 1521058271218] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058273136 1521058272668 1521058272235 1521058271218]))
    (is (= (compute-next 1521058273569 [1521058273137 1521058272668 1521058272235 1521058271218] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058273569 1521058273137 1521058272668 1521058272235 1521058271218]))
    (is (= (compute-next 1521058274033 [1521058273570 1521058273137 1521058272668 1521058272235 1521058271218] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058274033 1521058273570 1521058273137 1521058272668 1521058272235]))
    (is (= (compute-next 1521058274520 [1521058274034 1521058273570 1521058273137 1521058272668 1521058272235 1521058271218] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058274520 1521058274034 1521058273570 1521058273137 1521058272668]))
    (is (= (compute-next 1521058275295 [1521058274521 1521058274034 1521058273570 1521058273137 1521058272668 1521058272235] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058275295 1521058274521 1521058274034 1521058273570 1521058273137]))
    (is (= (compute-next 1521058276664 [1521058275296 1521058274521 1521058274034 1521058273570 1521058273137 1521058272668] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058276664 1521058275296 1521058274521 1521058274034 1521058273570]))
    (is (= (compute-next 1521058277410 [1521058276665 1521058275296 1521058274521 1521058274034 1521058273570 1521058273137] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058277410 1521058276665 1521058275296 1521058274521 1521058274034]))
    (is (= (compute-next 1521058277997 [1521058277410 1521058276665 1521058275296 1521058274521 1521058274034 1521058273570] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058277997 1521058277410 1521058276665 1521058275296 1521058274521]))
    (is (= (compute-next 1521058278484 [1521058277998 1521058277410 1521058276665 1521058275296 1521058274521 1521058274034] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058278484 1521058277998 1521058277410 1521058276665 1521058275296]))
    (is (= (compute-next 1521058279070 [1521058278484 1521058277998 1521058277410 1521058276665 1521058275296 1521058274521] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058279070 1521058278484 1521058277998 1521058277410 1521058276665]))
    (is (= (compute-next 1521058285755 [1521058279070 1521058278484 1521058277998 1521058277410 1521058276665 1521058275296] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058285755]))
    (is (= (compute-next 1521058287100 [1521058285756] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058287100 1521058285756]))
    (is (= (compute-next 1521058289159 [1521058287101 1521058285756] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058289159 1521058287101 1521058285756]))
    (is (= (compute-next 1521058290199 [1521058289160 1521058287101 1521058285756] {:precision 0, :reset-time 5, :sample-size 5})
           [1521058290199 1521058289160 1521058287101 1521058285756])))
  (testing "compute-next more than reset-time"
    (is (= (compute-next 4999 [20 10 0] {:reset-time 5 :sample-size 3}) [4999 20 10]))
    (is (= (compute-next 5051 [20 10 0] {:reset-time 5 :sample-size 3}) [5051]))))
